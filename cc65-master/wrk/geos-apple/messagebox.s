;
; File generated by cc65 v 2.14.0
;
	.fopt		compiler,"cc65 v 2.14.0"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_PutString
	.import		_UseSystemFont
	.import		_DoDlgBox
	.import		_RstrFrmDialogue
	.export		_MessageBox
	.import		_vsprintf
	.export		__mbprintout

.segment	"DATA"

__mbdlg_EMPTY:
	.byte	$81
	.byte	$11
	.addr	_RstrFrmDialogue
	.byte	$13
	.addr	__mbprintout
	.byte	$00
__mbdlg_OK:
	.byte	$81
	.byte	$13
	.addr	__mbprintout
	.byte	$01
	.byte	$09
	.byte	$48
	.byte	$00
__mbdlg_OKCANCEL:
	.byte	$81
	.byte	$13
	.addr	__mbprintout
	.byte	$01
	.byte	$01
	.byte	$48
	.byte	$02
	.byte	$11
	.byte	$48
	.byte	$00
__mbdlg_YESNO:
	.byte	$81
	.byte	$13
	.addr	__mbprintout
	.byte	$03
	.byte	$01
	.byte	$48
	.byte	$04
	.byte	$11
	.byte	$48
	.byte	$00
__mbboxes:
	.addr	__mbdlg_EMPTY
	.addr	__mbdlg_OK
	.addr	__mbdlg_OKCANCEL
	.addr	__mbdlg_YESNO

.segment	"BSS"

__mbbuffer:
	.res	256,$00

; ---------------------------------------------------------------
; unsigned char __near__ MessageBox (unsigned char, __near__ const unsigned char*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_MessageBox: near

.segment	"CODE"

	jsr     enter
	lda     regbank+4
	ldx     regbank+5
	jsr     pushax
	jsr     decsp2
	ldy     #$04
	lda     (sp),y
	jsr     leaa0sp
	clc
	adc     #$02
	bcc     L0055
	inx
L0055:	jsr     stax0sp
	jsr     decsp4
	lda     #<(__mbbuffer)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(__mbbuffer)
	sta     (sp),y
	ldy     #$08
	lda     (sp),y
	jsr     leaa0sp
	clc
	adc     #$06
	bcc     L0059
	inx
L0059:	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	lda     (ptr1)
	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _vsprintf
	lda     #<(__mbbuffer)
	sta     regbank+4
	lda     #>(__mbbuffer)
	sta     regbank+4+1
	bra     L0060
L0087:	lda     (regbank+4),y
	cmp     #$0A
	bne     L0062
	lda     #$0D
	sta     (regbank+4),y
L0062:	inc     regbank+4
	bne     L0060
	inc     regbank+4+1
L0060:	ldy     #$00
	lda     (regbank+4)
	bne     L0087
	ldy     #$04
	lda     (sp),y
	jsr     leaa0sp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	cmp     #$04
	bcc     L0088
	lda     (sp),y
	jsr     leaa0sp
	sta     ptr1
	stx     ptr1+1
	lda     #$00
	sta     (ptr1),y
L0088:	lda     (sp),y
	jsr     leaa0sp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	stz     tmp1
	asl     a
	rol     tmp1
	clc
	adc     #<(__mbboxes)
	sta     ptr1
	lda     tmp1
	adc     #>(__mbboxes)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	lda     (ptr1)
	jsr     _DoDlgBox
	pha
	ldy     #$02
	lda     (sp),y
	sta     regbank+4
	iny
	lda     (sp),y
	sta     regbank+5
	pla
	iny
	jmp     leavey

.endproc

; ---------------------------------------------------------------
; void __near__ _mbprintout (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	__mbprintout: near

.segment	"CODE"

	jsr     _UseSystemFont
	lda     #$20
	sta     $021E
	ldx     #$00
	lda     #$4A
	sta     $0220
	stz     $0220+1
	lda     #$F5
	sta     $0222
	stz     $0222+1
	lda     #$7F
	sta     $021F
	jsr     decsp3
	lda     #<(__mbbuffer)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(__mbbuffer)
	sta     (sp),y
	lda     $021A
	clc
	adc     #$2A
	sta     (sp)
	lda     #$4A
	jmp     _PutString

.endproc

