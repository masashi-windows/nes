;
; File generated by cc65 v 2.14.0
;
	.fopt		compiler,"cc65 v 2.14.0"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		__cbm_filetype
	.import		_cbm_k_basin
	.import		_cbm_k_chkin
	.import		_cbm_k_clrch
	.import		_cbm_k_readst
	.import		_cbm_open
	.import		_cbm_close
	.export		_cbm_opendir
	.export		_cbm_readdir
	.export		_cbm_closedir
	.import		__oserror

.segment	"RODATA"

L0003:
	.byte	$24,$00

; ---------------------------------------------------------------
; unsigned char __near__ cbm_opendir (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cbm_opendir: near

.segment	"CODE"

	jsr     enter
	jsr     decsp2
	lda     #<(L0003)
	ldx     #>(L0003)
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	cmp     #$04
	bne     L0005
	jsr     leaa0sp
	clc
	adc     #$03
	bcc     L000B
	inx
L000B:	ldy     #$02
	jsr     staxysp
	ldx     #$00
	lda     #$02
	tay
	jsr     subeqysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
L0005:	jsr     decsp3
	ldy     #$07
	lda     (sp),y
	jsr     leaa0sp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	ldy     #$02
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	jsr     leaa0sp
	dey
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	ldy     #$01
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	ldy     #$04
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _cbm_open
	cmp     #$00
	bne     L0024
	ldy     #$04
	lda     (sp),y
	jsr     leaa0sp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     _cbm_k_chkin
	sta     __oserror
	cmp     #$00
	bne     L0024
	jsr     _cbm_k_basin
	jsr     _cbm_k_basin
	jsr     _cbm_k_clrch
	jsr     _cbm_k_readst
	tax
	beq     L00B1
	ldy     #$04
	lda     (sp),y
	jsr     leaa0sp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     _cbm_close
	lda     #$04
	sta     __oserror
L0024:	ldx     #$00
L00B1:	lda     __oserror
	ldy     #$04
	jmp     leavey

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ cbm_readdir (unsigned char, register __near__ struct cbm_dirent*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cbm_readdir: near

.segment	"CODE"

	jsr     pushax
	ldy     #$00
	ldx     #$04
	jsr     regswap2
	jsr     decsp1
	lda     #$00
	jsr     pusha
	jsr     pusha
	lda     #$01
	jsr     pusha
	ldy     #$06
	lda     (sp),y
	jsr     _cbm_k_chkin
	tax
	jne     L0033
	jsr     _cbm_k_readst
	tax
	jne     L0033
	jsr     _cbm_k_basin
	jsr     _cbm_k_basin
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	jsr     _cbm_k_basin
	jsr     pushax
	jsr     _cbm_k_basin
	tax
	lda     #$00
	jsr     tosorax
	ldy     #$11
	jsr     staxspidx
	jsr     _cbm_k_basin
	ldy     #$03
	sta     (sp),y
	cmp     #$12
	beq     L00B6
	cmp     #$42
	beq     L0043
	jmp     L00B8
L0041:	jsr     _cbm_k_basin
L0043:	jsr     _cbm_k_readst
	tax
	beq     L0041
	lda     #$02
	jmp     L00BD
L00B6:	lda     #$01
	tay
	jmp     L00B5
L004D:	jsr     _cbm_k_readst
	tax
	beq     L0051
	lda     #$03
	jmp     L00BD
L0051:	jsr     _cbm_k_basin
	ldy     #$03
L00B5:	sta     (sp),y
	ldy     #$03
L00B8:	lda     (sp),y
	cmp     #$22
	bne     L004D
	jmp     L0059
L0057:	jsr     _cbm_k_readst
	tax
	beq     L005D
	lda     #$04
	jmp     L00BD
L005D:	ldy     #$02
	lda     (sp),y
	cmp     #$10
	bcs     L0059
	clc
	adc     regbank+4
	ldx     regbank+4+1
	bcc     L00B2
	inx
L00B2:	sta     ptr1
	stx     ptr1+1
	iny
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	ldy     #$02
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
L0059:	jsr     _cbm_k_basin
	ldy     #$03
	sta     (sp),y
	cmp     #$22
	bne     L0057
	dey
	lda     (sp),y
	clc
	adc     regbank+4
	ldx     regbank+4+1
	bcc     L00B3
	inx
L00B3:	sta     ptr1
	stx     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	iny
	lda     (sp),y
	beq     L007B
	lda     #$05
	ldy     #$13
	sta     (regbank+4),y
	lda     #$06
	ldy     #$02
	sta     (sp),y
L0071:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	jsr     _cbm_k_basin
	ldy     #$05
	sta     (sp),y
	ldy     #$14
	jsr     staspidx
	ldy     #$02
	lda     (sp),y
	sec
	sbc     #$01
	sta     (sp),y
	cmp     #$00
	bne     L0071
	jmp     L00A2
L0079:	jsr     _cbm_k_readst
	tax
	beq     L007B
	lda     #$05
	jmp     L00BD
L007B:	jsr     _cbm_k_basin
	ldy     #$03
	sta     (sp),y
	cmp     #$20
	beq     L0079
	tya
	ldy     #$14
	sta     (regbank+4),y
	tay
	lda     (sp),y
	cmp     #$2A
	bne     L0085
	lda     #$02
	ldy     #$14
	sta     (regbank+4),y
	jsr     _cbm_k_basin
	ldy     #$03
	sta     (sp),y
L0085:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	jsr     __cbm_filetype
	ldy     #$13
	jsr     staspidx
	jsr     _cbm_k_basin
	cmp     #$49
	bne     L008E
	ldy     #$03
	lda     (sp),y
	cmp     #$44
	bne     L008E
	lda     #$02
	ldy     #$13
	sta     (regbank+4),y
L008E:	jsr     _cbm_k_basin
	jsr     _cbm_k_basin
	ldy     #$03
	sta     (sp),y
	cmp     #$3C
	bne     L00BC
	ldy     #$14
	lda     (regbank+4),y
	cmp     #$02
	bne     L00BA
	lda     #$00
	jmp     L00BB
L00BA:	lda     #$01
L00BB:	sta     (regbank+4),y
	jmp     L00A2
L00A0:	jsr     _cbm_k_readst
	tax
	beq     L00A4
	lda     #$06
	jmp     L00BD
L00A4:	jsr     _cbm_k_basin
	ldy     #$03
	sta     (sp),y
L00A2:	ldy     #$03
L00BC:	lda     (sp),y
	bne     L00A0
L00BD:	ldy     #$00
	sta     (sp),y
L0033:	jsr     _cbm_k_clrch
	ldx     #$00
	lda     (sp,x)
	pha
	ldy     #$04
	lda     (sp),y
	sta     regbank+4
	iny
	lda     (sp),y
	sta     regbank+5
	pla
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ cbm_closedir (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cbm_closedir: near

.segment	"CODE"

	jsr     pusha
	ldy     #$00
	lda     (sp),y
	jsr     _cbm_close
	jmp     incsp1

.endproc

