;
; File generated by cc65 v 2.14.0
;
	.fopt		compiler,"cc65 v 2.14.0"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_div
	.export		_mktime

.segment	"RODATA"

_MonthLength:
	.byte	$1F
	.byte	$1C
	.byte	$1F
	.byte	$1E
	.byte	$1F
	.byte	$1E
	.byte	$1F
	.byte	$1F
	.byte	$1E
	.byte	$1F
	.byte	$1E
	.byte	$1F
_MonthDays:
	.word	$0000
	.word	$001F
	.word	$003B
	.word	$005A
	.word	$0078
	.word	$0097
	.word	$00B5
	.word	$00D4
	.word	$00F3
	.word	$0111
	.word	$0130
	.word	$014E

; ---------------------------------------------------------------
; unsigned long __near__ __fastcall__ mktime (register __near__ struct tm*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_mktime: near

.segment	"CODE"

	jsr     pushax
	ldy     #$00
	ldx     #$04
	jsr     regswap2
	jsr     decsp4
	ldy     #$03
L002A:	lda     regbank-1,x
	sta     (sp),y
	dey
	dex
	bne     L002A
	jsr     decsp4
	lda     regbank+4
	ora     regbank+4+1
	jeq     L002E
	ldy     #$01
	lda     (regbank+4),y
	tax
	lda     (regbank+4)
	jsr     pushax
	ldx     #$00
	lda     #$3C
	jsr     _div
	sta     regbank+0
	stx     regbank+0+1
	ldy     sreg
	sty     regbank+0+2
	ldy     sreg+1
	sty     regbank+0+3
	lda     regbank+0
	sta     (regbank+4)
	ldy     #$01
	lda     regbank+0+1
	sta     (regbank+4),y
	ldy     #$03
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     regbank+2
	txa
	adc     regbank+2+1
	tax
	cpx     #$80
	jcs     L002E
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$03
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     regbank+2
	pha
	txa
	adc     regbank+2+1
	tax
	pla
	jsr     staxspidx
	iny
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$00
	lda     #$3C
	jsr     _div
	sta     regbank+0
	stx     regbank+0+1
	ldy     sreg
	sty     regbank+0+2
	ldy     sreg+1
	sty     regbank+0+3
	lda     regbank+0
	ldy     #$02
	sta     (regbank+4),y
	iny
	lda     regbank+0+1
	sta     (regbank+4),y
	ldy     #$05
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     regbank+2
	txa
	adc     regbank+2+1
	tax
	cpx     #$80
	jcs     L002E
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$05
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     regbank+2
	pha
	txa
	adc     regbank+2+1
	tax
	pla
	jsr     staxspidx
	iny
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$00
	lda     #$18
	jsr     _div
	sta     regbank+0
	stx     regbank+0+1
	ldy     sreg
	sty     regbank+0+2
	ldy     sreg+1
	sty     regbank+0+3
	lda     regbank+0
	ldy     #$04
	sta     (regbank+4),y
	iny
	lda     regbank+0+1
	sta     (regbank+4),y
	ldy     #$07
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     regbank+2
	txa
	adc     regbank+2+1
	tax
	cpx     #$80
	jcs     L002E
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$07
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     regbank+2
	pha
	txa
	adc     regbank+2+1
	tax
	pla
L0099:	jsr     staxspidx
	ldy     #$09
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldx     #$00
	lda     #$0C
	jsr     _div
	sta     regbank+0
	stx     regbank+0+1
	ldy     sreg
	sty     regbank+0+2
	ldy     sreg+1
	sty     regbank+0+3
	lda     regbank+0
	ldy     #$08
	sta     (regbank+4),y
	iny
	lda     regbank+0+1
	sta     (regbank+4),y
	ldy     #$0B
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     regbank+2
	txa
	adc     regbank+2+1
	tax
	cpx     #$80
	jcs     L002E
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$0B
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     regbank+2
	pha
	txa
	adc     regbank+2+1
	tax
	pla
	jsr     staxspidx
	dey
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	cpx     #$00
	bne     L005B
	cmp     #$01
	bne     L005B
	ldy     #$0B
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     #$6C
	pha
	txa
	adc     #$07
	tax
	pla
	jsr     _IsLeapYear
	tax
	beq     L005B
	ldy     #$02
	lda     #$1D
	sta     (sp),y
	lda     #$00
	iny
	sta     (sp),y
	bra     L0063
L005B:	ldy     #$09
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	sta     ptr1
	txa
	clc
	adc     #>(_MonthLength)
	sta     ptr1+1
	ldy     #<(_MonthLength)
	lda     (ptr1),y
	ldx     #$00
	ldy     #$02
	jsr     staxysp
L0063:	ldy     #$07
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosicmp
	bmi     L004E
	beq     L004E
	ldy     #$09
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	cpx     #$00
	bne     L0069
	cmp     #$0B
	bne     L0069
	txa
	sta     (regbank+4),y
	iny
	sta     (regbank+4),y
	ldy     #$0B
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	bra     L00A4
L0069:	iny
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
L00A4:	ina
	bne     L009B
	inx
L009B:	sta     (regbank+4),y
	iny
	txa
	sta     (regbank+4),y
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$07
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	sec
	ldy     #$04
	sbc     (sp),y
	pha
	txa
	iny
	sbc     (sp),y
	tax
	pla
	iny
	jmp     L0099
L004E:	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$09
	lda     (regbank+4),y
	sta     tmp1
	dey
	lda     (regbank+4),y
	asl     a
	rol     tmp1
	clc
	adc     #<(_MonthDays)
	sta     ptr1
	lda     tmp1
	adc     #>(_MonthDays)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	lda     (ptr1)
	jsr     pushax
	ldy     #$07
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     tosaddax
	sec
	sbc     #$01
	bcs     L0079
	dex
L0079:	ldy     #$0E
	jsr     staxspidx
	ldy     #$09
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	cmp     #$02
	txa
	sbc     #$00
	bvs     L007C
	eor     #$80
L007C:	bpl     L007A
	ldy     #$0B
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	clc
	adc     #$6C
	pha
	txa
	adc     #$07
	tax
	pla
	jsr     _IsLeapYear
	tax
	beq     L007A
	ldy     #$0F
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	ina
	bne     L009E
	inx
L009E:	sta     (regbank+4),y
	iny
	txa
	sta     (regbank+4),y
L007A:	ldy     #$0B
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	sec
	sbc     #$46
	bcs     L0086
	dex
L0086:	jsr     pushax
	ldx     #$01
	lda     #$6D
	jsr     tosumulax
	sta     ptr1
	stx     ptr1+1
	ldy     #$0B
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	sec
	sbc     #$45
	bcs     L008B
	dex
L008B:	jsr     shrax2
	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	tax
	pla
	jsr     pushax
	ldy     #$0F
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     tosaddax
	jsr     stax0sp
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$04
	bcc     L008F
	inx
L008F:	jsr     pushax
	lda     #$07
	jsr     tosumoda0
	ldy     #$0C
	jsr     staxspidx
	lda     #$00
	ldy     #$10
	sta     (regbank+4),y
	iny
	sta     (regbank+4),y
	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	jsr     push0ax
	ldx     #$51
	lda     #$01
	sta     sreg
	lda     #$80
	jsr     tosumuleax
	jsr     pusheax
	ldy     #$05
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     push0ax
	ldx     #$0E
	lda     #$10
	jsr     tosumul0ax
	jsr     tosaddeax
	jsr     pusheax
	ldy     #$03
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     pushax
	lda     #$3C
	jsr     tosumula0
	jsr     tosadd0ax
	jsr     pusheax
	ldy     #$01
	lda     (regbank+4),y
	tax
	lda     (regbank+4)
	jsr     tosadd0ax
	bra     L0029
L002E:	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
L0029:	pha
	stx     tmp1
	ldy     #$09
	ldx     #$05
L0097:	lda     (sp),y
	sta     regbank+0,x
	dey
	dex
	bpl     L0097
	ldx     tmp1
	pla
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ __fastcall__ IsLeapYear (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_IsLeapYear: near

.segment	"CODE"

	jsr     pushax
	lda     (sp)
	ldx     #$00
	and     #$03
	bne     L00A5
	jsr     pushw0sp
	lda     #$64
	jsr     tosumoda0
	cpx     #$00
	bne     L0022
	cmp     #$00
	bne     L00A9
	jsr     pushw0sp
	ldx     #$01
	lda     #$90
	jsr     tosumodax
	cpx     #$00
	bne     L00A8
	cmp     #$00
	beq     L00A9
L00A8:	ldx     #$00
	txa
	jmp     incsp2
L0022:	ldx     #$00
L00A9:	lda     #$01
	jmp     incsp2
L00A5:	txa
	jmp     incsp2

.endproc

