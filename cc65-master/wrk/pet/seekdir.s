;
; File generated by cc65 v 2.14.0
;
	.fopt		compiler,"cc65 v 2.14.0"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_open
	.import		_close
	.import		__errno
	.export		_seekdir
	.import		__dirread

; ---------------------------------------------------------------
; void __near__ __fastcall__ seekdir (register __near__ struct DIR*, long)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_seekdir: near

.segment	"CODE"

	jsr     pusheax
	ldy     #$04
	ldx     #$04
	jsr     regswap2
	ldy     #$83
	jsr     subysp
	ldy     #$86
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$10
	lda     #$00
	sta     sreg
	sta     sreg+1
	lda     #$01
	jsr     tosgeeax
	beq     L0005
	ldx     #$00
	lda     #$07
	sta     __errno
	stx     __errno+1
	jmp     L0016
L0005:	ldy     #$01
	lda     (regbank+4),y
	tax
	dey
	lda     (regbank+4),y
	jsr     _close
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	jsr     decsp4
	lda     regbank+4
	ldx     regbank+4+1
	clc
	adc     #$04
	bcc     L000E
	inx
L000E:	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #$01
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$04
	jsr     _open
	ldy     #$00
	jsr     staxspidx
	iny
	lda     (regbank+4),y
	tax
	cpx     #$80
	bcs     L0016
	lda     regbank+4
	ldx     regbank+4+1
	jsr     pushax
	ldy     #$86
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	jsr     staxspidx
	ldy     #$81
	jsr     staxysp
	jmp     L0017
L0015:	ldy     #$82
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$81
	txa
	sbc     #$00
	bcc     L0019
	lda     #$80
	dey
	sta     (sp),y
	ldx     #$00
	iny
	jsr     subeqysp
	jmp     L0022
L0019:	ldy     #$83
	lda     (sp),y
	ldy     #$80
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	iny
	sta     (sp),y
L0022:	jsr     decsp4
	lda     regbank+4
	ldy     #$02
	sta     (sp),y
	iny
	lda     regbank+4+1
	sta     (sp),y
	lda     sp
	ldx     sp+1
	clc
	adc     #$04
	bcc     L002B
	inx
L002B:	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$84
	lda     (sp),y
	jsr     __dirread
	tax
	beq     L0016
L0017:	ldy     #$82
	lda     (sp),y
	dey
	ora     (sp),y
	bne     L0015
L0016:	ldy     #$87
	lda     (sp),y
	sta     regbank+4
	iny
	lda     (sp),y
	sta     regbank+5
	iny
	jmp     addysp

.endproc

